services:
  elasticsearch:
    image: elasticsearch:7.17.22
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    expose:
      - "${ELASTICSEARCH_PORT}"
    ports:
      - "${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}"
    networks:
      - elk-stack

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - ./redis:/data
    expose:
      - "${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: --port ${REDIS_PORT}
    networks:
      - redis
    restart: always


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:alpine
    expose:
      - "${RABBITMQ_PORT}"
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
    networks:
      - rabbitmq
    restart: always


  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    expose:
      - "${ZIPKIN_PORT}"
    ports:
      - "${ZIPKIN_PORT}:${ZIPKIN_PORT}"
    networks:
      - zipkin
    restart: always


  postgres:
    container_name: postgres
    image: postgres:alpine
    environment:
      POSTGRES_DB: auth-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emirhan
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    expose:
      - "${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: -p ${POSTGRES_PORT}
    networks:
      - postgres
    restart: always


  service-registry:
    container_name: service-registry
    image: emirhantuygun/service-registry:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    expose:
      - "${SERVICE_REGISTRY_PORT}"
    ports:
      - "${SERVICE_REGISTRY_PORT}:${SERVICE_REGISTRY_PORT}"
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - zipkin
    depends_on:
      - zipkin


  api-gateway:
    container_name: api-gateway
    image: emirhantuygun/api-gateway:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    expose:
      - "${API_GATEWAY_PORT}"
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - redis
      - zipkin
    depends_on:
      - service-registry
      - redis
      - zipkin


  auth-service:
    container_name: auth-service
    image: emirhantuygun/auth-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - postgres
      - redis
      - rabbitmq
      - zipkin
    depends_on:
      - service-registry
      - api-gateway
      - postgres
      - redis
      - rabbitmq
      - zipkin


  user-service:
    container_name: user-service
    image: emirhantuygun/user-management-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - postgres
      - rabbitmq
      - zipkin
    depends_on:
      - service-registry
      - api-gateway
      - postgres
      - auth-service
      - rabbitmq
      - zipkin


  product-service:
    container_name: product-service
    image: emirhantuygun/product-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SEND_EMAIL=${SEND_EMAIL}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_RECIPIENT=${EMAIL_RECIPIENT}
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - postgres
      - redis
      - rabbitmq
      - zipkin
    depends_on:
      - service-registry
      - api-gateway
      - redis
      - postgres
      - rabbitmq
      - zipkin


  sale-service:
    container_name: sale-service
    image: emirhantuygun/sale-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - postgres
      - rabbitmq
      - zipkin
    depends_on:
      - service-registry
      - api-gateway
      - postgres
      - product-service
      - rabbitmq
      - zipkin


  report-service:
    container_name: report-service
    image: emirhantuygun/report-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_ACTIVE=${GEMINI_ACTIVE}
    volumes:
      - ./logs-docker:/logs
    networks:
      - registry
      - zipkin
    depends_on:
      - service-registry
      - api-gateway
      - sale-service
      - zipkin


volumes:
  postgres:
  logs-docker:
  redis:

networks:
  elk-stack:
  postgres:
  registry:
  redis:
  rabbitmq:
  zipkin:



