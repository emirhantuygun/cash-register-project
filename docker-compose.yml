services:
  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - ./redis:/data
    expose:
      - "${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: --port ${REDIS_PORT}
    networks:
      - redis
    restart: always


  rabbitmq:
    container_name: rabbitmq
#    image: rabbitmq:3.12.14-management
    image: rabbitmq:alpine
    expose:
      - "${RABBITMQ_PORT_1}"
      - "${RABBITMQ_PORT_2}"
    ports:
      - "${RABBITMQ_PORT_1}:${RABBITMQ_PORT_1}"
      - "${RABBITMQ_PORT_2}:${RABBITMQ_PORT_2}"
    networks:
      - rabbitmq-user
      - rabbitmq-stock
    restart: always


  postgres-product:
    container_name: postgres-product
    image: postgres:alpine
    environment:
      POSTGRES_DB: product-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emirhan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-product:/data/postgres
    expose:
      - "${POSTGRES_PRODUCT_PORT}"
    ports:
      - "${POSTGRES_PRODUCT_PORT}:${POSTGRES_PRODUCT_PORT}"
    command: -p ${POSTGRES_PRODUCT_PORT}
    networks:
      - postgres-product
    restart: always

  postgres-sale:
    container_name: postgres-sale
    image: postgres:alpine
    environment:
      POSTGRES_DB: sale-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emirhan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-sale:/data/postgres
    expose:
      - "${POSTGRES_SALE_PORT}"
    ports:
      - "${POSTGRES_SALE_PORT}:${POSTGRES_SALE_PORT}"
    command: -p ${POSTGRES_SALE_PORT}
    networks:
      - postgres-sale
    restart: always

  postgres-user:
    container_name: postgres-user
    image: postgres:alpine
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emirhan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - "${POSTGRES_USER_PORT}"
    ports:
      - "${POSTGRES_USER_PORT}:${POSTGRES_USER_PORT}"
    command: -p ${POSTGRES_USER_PORT}
    networks:
      - postgres-user
    restart: always

  postgres-auth:
    container_name: postgres-auth
    image: postgres:alpine
    environment:
      POSTGRES_DB: auth-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emirhan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-auth:/data/postgres
    expose:
      - "${POSTGRES_AUTH_PORT}"
    ports:
      - "${POSTGRES_AUTH_PORT}:${POSTGRES_AUTH_PORT}"
    command: -p ${POSTGRES_AUTH_PORT}
    networks:
      - postgres-auth
    restart: always


  service-registry:
    container_name: service-registry
    image: emirhantuygun/service-registry:latest
    ports:
      - "${SERVICE_REGISTRY_PORT}:${SERVICE_REGISTRY_PORT}"
    expose:
      - "${SERVICE_REGISTRY_PORT}"
    networks:
      - registry
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  api-gateway:
    container_name: api-gateway
    image: emirhantuygun/api-gateway:latest
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    expose:
      - "${API_GATEWAY_PORT}"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - registry
      - redis
    depends_on:
      - service-registry
      - redis


  product-service:
    container_name: product-service
    image: emirhantuygun/product-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - registry
      - postgres-product
      - rabbitmq-stock
    depends_on:
      - service-registry
      - api-gateway
      - postgres-product
      - rabbitmq


  sale-service:
    container_name: sale-service
    image: emirhantuygun/sale-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - registry
      - postgres-sale
      - rabbitmq-stock
    depends_on:
      - service-registry
      - api-gateway
      - postgres-sale
      - product-service
      - rabbitmq


  report-service:
    container_name: report-service
    image: emirhantuygun/report-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - registry
    depends_on:
      - service-registry
      - api-gateway
      - sale-service


  auth-service:
    container_name: auth-service
    image: emirhantuygun/auth-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - registry
      - postgres-auth
      - redis
      - rabbitmq-user
    depends_on:
      - service-registry
      - api-gateway
      - postgres-auth
      - redis
      - rabbitmq


  user-service:
    container_name: user-service
    image: emirhantuygun/user-management-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - registry
      - postgres-user
      - rabbitmq-user
    depends_on:
      - service-registry
      - api-gateway
      - postgres-user
      - auth-service
      - rabbitmq


networks:
  postgres-product:
  postgres-sale:
  postgres-auth:
  postgres-user:
  registry:
  redis:
  rabbitmq-user:
  rabbitmq-stock:



